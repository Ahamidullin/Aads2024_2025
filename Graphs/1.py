'''
Задача №178. Форд-Беллман
Дан ориентированный граф, в котором могут быть кратные ребра и петли. Каждое ребро имеет вес, выражающийся целым числом (возможно, отрицательным). Гарантируется, что циклы отрицательного веса отсутствуют.

Требуется посчитать длины кратчайших путей от вершины номер 1 до всех остальных вершин.

Входные данные
Программа получает сначала число N (1 <= N <= 100) – количество вершин графа и число M (0 <= M <= 10000) – количество ребер. В следующих строках идет M троек чисел, описывающих ребра: начало ребра, конец ребра и вес (вес – целое число от -100 до 100).

Выходные данные
Программа должна вывести N чисел – расстояния от вершины номер 1 до всех вершин графа. Если пути до соответствующей вершины не существует, вместо длины пути выведите число 30000.
'''
class Edge:
    def __init__(self,f,t,w):
        self.f = f
        self.t = t
        self.w = w

    def __str__(self):
        return f"({self.f} {self.t} {self.w})"

n, m = [int(x) for x in input().split()]
edge = []

for i in range(m):
    f,t,w = [int(x) for x in input().split()]
    edge.append(Edge(f,t,w))

print(*edge)

inf = 30000
dist = [inf] * n
dist[0] = 0

for k in range(n - 1):
    for item in edge:
        f, t, w = item
        if dist[f] != inf and dist[f] + w < dist[t]:
            dist[t] = dist[f] + w

print(*dist)